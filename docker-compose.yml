version: '3.4'
services:
  fisheye-server:
    image: atlassian/fisheye:latest
    restart: always
    container_name: fisheye-server
    hostname: fisheye
    environment:
      FECRU_CONFIGURE_DB_TYPE: postgresql
      FECRU_CONFIGURE_DB_HOST: db-fisheye
      FECRU_CONFIGURE_DB_PORT: '5432'
      FECRU_CONFIGURE_DB_USER: fisheye
      FECRU_CONFIGURE_DB_PASSWORD: 'PZz-0oOmnW#fgT:kc^7c'
      FECRU_CONFIGURE_ADMIN_PASSWORD: '123456a@A'
      FISHEYE_OPTS: '-javaagent:/atlassian-agent.jar'
      JVM_MINIMUM_MEMORY: 512m
      JVM_MAXIMUM_MEMORY: 2048m
      #   If Use Reverse Proxy Uncomment this Line
      ATL_TOMCAT_SCHEME: 'https'
      ATL_TOMCAT_SECURE: 'true'
      ATL_PROXY_PORT: '443'
      ATL_PROXY_NAME: 'fisheye.baityapp.online'
    volumes:
      - fisheye-server:/atlassian/data/fisheye
      - ./agent/atlassian-agent.jar:/atlassian-agent.jar:ro
    networks:
      - network-bridge
    depends_on:
      - postgres
    ports:
      - 8088:8080

#   fisheye-server:
#     image: alvistack/fisheye-4.8
#     container_name: fisheye-server
#     ports:
#       - '8060:8060'
#     volumes:
#       - '/var/atlassian/application-data/fisheye:/var/atlassian/application-data/fisheye'
#     init: true # Recommended by Atlassian to properly reap zombie processes
#     restart: always
#     depends_on:
#       - postgres
#     networks:
#       - network-bridge

  #fisheye-server:
  #  image: atlassian/fisheye:4
  #  container_name: fisheye-server
  #  ports:
  #    - "8060:8060"
  #  environment:
  #    - 'FISHEYE_OPTS=-Dfecru.configure.from.env.variables=true'
  #    - 'FECRU_CONFIGURE_ADMIN_PASSWORD=password'
  #    - 'FECRU_CONFIGURE_DB_TYPE=postgresql'
  #    - 'FECRU_CONFIGURE_LICENSE_FISHEYE='
  #    - 'FECRU_CONFIGURE_DB_HOST=postgres'
  #    - 'FECRU_CONFIGURE_DB_NAME=fisheye'
  #    - 'FECRU_CONFIGURE_DB_PORT=5432'
  #    - 'FECRU_CONFIGURE_DB_USER=fisheye'
  #    - 'FECRU_CONFIGURE_DB_PASSWORD=123123'
  #  volumes:
  #    - fisheye-server:/var/atlassian/application-data/fisheye
  #    - ./atlassian-agent.jar:/var/agent/atlassian-agent.jar
  #  init: true # Recommended by Atlassian to properly reap zombie processes
  #  restart: always
  #  networks:
  #    - network-bridge

#   fisheye-server:
#     image: leloimr/fisheye-server:4.7.0
#     container_name: fisheye-server
#     build:
#       context: .
#       dockerfile: ./Dockerfile
#     ports:
#       - '8060:8060'
#     volumes:
#       - fisheye-server:/var/fisheye
#       - fisheye-logs:/opt/fisheye/fecru-4.7.0/var/log/
#     init: true # Recommended by Atlassian to properly reap zombie processes
#     restart: always
#     depends_on:
#       - postgres
#     networks:
#       - network-bridge

  #mysql:
  #  image: mysql:8.0
  #  container_name: mysql-fisheye
  #  environment:
  #    - TZ=Asia/Ho_Chi_Minh
  #    - MYSQL_DATABASE=fisheye
  #    - MYSQL_ROOT_PASSWORD=123456
  #    - MYSQL_USER=fisheye
  #    - MYSQL_PASSWORD=123123
  #  command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_bin', '--transaction-isolation=READ-COMMITTED', '--innodb_log_file_size=256M', '--max_allowed_packet=256M','--log_bin_trust_function_creators=1']
  #  volumes:
  #    - mysql_data:/var/lib/mysql
  #  restart: always
  #  networks:
  #    - network-bridge

  postgres:
     image: postgres:latest
     container_name: fisheye-postgressql
     environment:
       PGDATA: /var/lib/postgresql/data/pgdata
       POSTGRES_DB: fisheye
       POSTGRES_USER: fisheye
       POSTGRES_PASSWORD: 123123
     volumes:
       - postgres_data:/var/lib/postgresql/data/pgdata
     restart: always
     networks:
       - network-bridge

networks:
  network-bridge:
    driver: bridge

volumes:
  fisheye-server:
    external: false
  #mysql_data:
  #  external: false
  postgres_data:
    external: false
